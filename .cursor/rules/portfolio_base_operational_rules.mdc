---
description: 
globs: 
alwaysApply: true
---
# portfolio-base 運用ルール

## 1. 基本方針

- `portfolio-base`は、杉山丈太郎の実績・活動・スキル・プロジェクト・知見を体系的に記録する知識ベースです。
- Markdown形式とYAML Frontmatterによる半構造化データで統一します。
- 将来的なAPI連携、自動抽出、可視化を常に意識してください。

## 2. ディレクトリ・ファイル命名規則

### 2.1. 命名形式
- 全てのフォルダ名およびファイル名は、**英小文字のスネークケース (`snake_case`)** に統一します。
- 単語間はアンダースコア `_` で連結してください。
- 例: `ar_quiz_battle`, `life_is_tech`

### 2.2. 日付の付与
- イベントや期間を持つ活動など、日付を識別子に含める場合は、名前の**末尾**にアンダースコア `_` 区切りで付与します。
- 形式: `[名前]_[YYYY_MM_DD]` または `[名前]_[YYYY_MM]` または `[名前]_[YYYY]`
- 例: `nhk_numa_appearance_2021_05_18`, `hakone_trip_2022_08`

### 2.3. 構造
1.  **トップレベルディレクトリ構成は変更しないこと**
    -   `00_Core/`
    -   `10_Projects/`
    -   `20_Activities/`
    -   `30_Knowledge/`
    -   `40_Organizations/`
    -   `99_Templates/`
    -   `linked_assets/` (Git Submodule)

2.  **カテゴリ構造の厳格化**
    -   `10_Projects` や `20_Activities` の直下には、必ずサブカテゴリ（例: `personal/`, `awards/`, `talks/`）を配置してください。個別のアイテムフォルダを直接配置してはいけません。

3.  **アイテムのエントリーポイント**
    -   各アイテムは、対応するカテゴリのサブディレクトリ内に専用のフォルダを作成します。
    -   アイテムフォルダ内の主要Markdownファイル名は、その**フォルダ名と完全に一致**させ、拡張子 `.md` を付与します。
    -   例: `10_Projects/personal/ar_quiz_battle/ar_quiz_battle.md`

## 3. アセット管理ルール

### 3.1. 一元管理とパス構造
- 全てのアセット（画像、PDF等）は `linked_assets` サブモジュール内で一元管理します。
- `linked_assets` 内のパス構造は、**本体リポジトリのディレクトリ構造を完全にミラーリング（再現）します。** これにより、アセットの場所が直感的にわかります。
- **パス形式**: `linked_assets/[カテゴリ]/[サブカテゴリ]/.../[アイテム名]/[ファイル名]`
- **パスの例**:
    - `linked_assets/10_Projects/personal/sfcway/sfcway_icon.jpg`
    - `linked_assets/20_Activities/awards/swift_student_challenge_2020/certificate.jpg`
- このディレクトリ構造は `sync_assets.sh` スクリプトによって維持・管理できます。

### 3.2. Markdown内での参照
- Markdownからアセットを参照する際は、リポジトリのルートからのパスで記述してください。
- 例: `![SFCWay アイコン](linked_assets/10_Projects/personal/sfcway/sfcway_icon.jpg)`

### 3.3. 大容量ファイルの管理
- 動画（.mp4, .mov等）やサイズの大きいPDFなど、**10MBを超えるファイルは必ずGit LFSで管理**してください。（この設定は `linked_assets` 側のリポジトリで行います）

## 4. Frontmatter (YAML) ルール

1.  **必須項目**: 全てのノートに、以下のFrontmatter項目を必ず記述してください。
    -   `title`: ノートのタイトル（日本語可）
    -   `type`: `project`, `activity`, `organization`, `knowledge` のいずれか
    -   `subtype`: `personal`, `talk`, `award` など、`type`に応じた詳細分類
    -   `status`: `completed`, `in-progress`, `planned`, `archived` のいずれか
    -   `start_date`: 開始日 (YYYY-MM-DD形式)
    -   `end_date`: 終了日 (YYYY-MM-DD形式, 進行中は空)
    -   `orgs`: 関連組織のID（ファイル名と一致）のリスト
    -   `tags`: タグのリスト（下記5.のルールに従う）
    -   `links`: 関連リンクURLのリスト
    -   `summary`: 1〜2文程度の要約

2.  **書式**: 配列要素は必ずYAMLリスト形式で記述してください。
    ```yaml
    tags:
      - swiftui
      - firebase
    role:
      - pm
      - ios_lead
    orgs:
      - infinity_inc
      - expo_2025
    links:
      - https://apps.apple.com/ja/app/xxxx
      - https://example.com/pr.pdf
    ```

## 5. タグ (tags) ルール

1.  **命名規則**: 全てのタグは、フォルダ名・ファイル名と同様に、**英小文字のスネークケース (`snake_case`)** に統一します。
2.  **言語**: 原則として**英語**を使用してください。
3.  **一貫性**: 固有名詞もルールに従います。（例: `Life is Tech!` → `life_is_tech`）

## 6. 内容記述とレイアウト

### 6.1. 記述の基本
- 「自分が何を担当したか」など、役割と貢献を具体的に記述してください。
- 外部リンクはFrontmatterの `links` に必ず記載し、本文中でも必要に応じてリンクしてください。
- 成果、学び、気づき、今後の展望などを記録してください。

### 6.2. 画像レイアウト
- **アイコン**: 各プロジェクトのアイコンは、以下のHTMLで右上に配置します。ファイル名は `icon.png` や `icon.jpg` にしてください。
  ```html
  <img src="linked_assets/10_Projects/personal/プロジェクト名/icon.jpg" alt="アプリアイコン" style="float: right; width: 100px; margin-left: 16px;">
  ```
- **複数画像（横並び）**: 以下のHTML記法を推奨します。`width` は合計が100%弱になるように調整してください。
  ```html
  <div style="display: flex; gap: 10px;">
      <img src="パス1" alt="説明1" width="32%">
      <img src="パス2" alt="説明2" width="32%">
      <img src="パス3" alt="説明3" width="32%">
  </div>
  ```

## 7. 禁止事項

- 本ルールに定義されていないディレクトリ構成や命名規則を適用しないこと。
- Frontmatterの必須項目を省略したり、不正確な情報を記述したりしないこと。
- 機密情報・個人情報を誤ってコミットしないこと。

以上を常に遵守してください。
